<?xml version="1.0"?>
<!--
    Purpose: 1v1 scenario with map-based navigation
    Type: Game scenario launch file
    World: game_world.world
    Robots: 2 robots (1 T, 1 CT)
    Features:
    - Pre-loaded map
    - AMCL localization
    - Move_base navigation
-->
<launch>
    <!-- Start Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find cs_bot)/worlds/world3.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
    </include>

    <!-- Load the map -->
    <node name="map_manager" pkg="cs_bot" type="map_manager.py" output="screen"/>

    <param name="T_spawn_x" value="$(param /T_spawn/x)" />
    <param name="T_spawn_y" value="$(param /T_spawn/y)" />
    <param name="T_spawn_z" value="$(param /T_spawn/z)" />

    <param name="CT_spawn_x" value="$(param /CT_spawn/x)" />
    <param name="CT_spawn_y" value="$(param /CT_spawn/y)" />
    <param name="CT_spawn_z" value="$(param /CT_spawn/z)" />

    <!-- T team robot -->
    <group ns="t_robot1">
        <param name="tf_prefix" value="t_robot1"/>
        
        <!-- Load robot model -->
        <param name="robot_description" 
               command="$(find xacro)/xacro $(find cs_bot)/urdf/cs_robot_red.urdf.xacro robot_name:=t_robot1" />
        
        <!-- Spawn Robot -->
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
              args="-urdf -model t_robot1 -x $(param T_spawn_x) -y $(param T_spawn_y) -z $(param T_spawn_z) -param robot_description"/>

        <!-- Robot State Publisher -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0"/>
            <param name="tf_prefix" value="t_robot1"/>
        </node>

        <!-- AMCL -->
        <node pkg="amcl" type="amcl" name="amcl">
            <param name="initial_pose_x" value="0.0"/>
            <param name="initial_pose_y" value="0.0"/>
        </node>

        <!-- Navigation -->
        <node pkg="move_base" type="move_base" name="move_base" output="screen">
            <rosparam file="$(find cs_bot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
            <rosparam file="$(find cs_bot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
            <rosparam file="$(find cs_bot)/config/local_costmap_params.yaml" command="load" />
            <rosparam file="$(find cs_bot)/config/global_costmap_params.yaml" command="load" />
            <rosparam file="$(find cs_bot)/config/move_base_params.yaml" command="load" />
            
            <param name="global_costmap/global_frame" value="map"/>
            <param name="global_costmap/robot_base_frame" value="t_robot1/base_footprint"/>
            <param name="local_costmap/global_frame" value="t_robot1/odom"/>
            <param name="local_costmap/robot_base_frame" value="t_robot1/base_footprint"/>
        </node>
    </group>

    <!-- CT team robot -->
    <group ns="ct_robot1">
        <param name="tf_prefix" value="ct_robot1"/>
        
        <param name="robot_description" 
               command="$(find xacro)/xacro $(find cs_bot)/urdf/cs_robot_blue.urdf.xacro robot_name:=ct_robot1" />
        
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
              args="-urdf -model ct_robot1 -x $(param CT_spawn_x) -y $(param CT_spawn_y) -z $(param CT_spawn_z) -param robot_description"/>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0"/>
            <param name="tf_prefix" value="ct_robot1"/>
        </node>

        <!-- AMCL -->
        <node pkg="amcl" type="amcl" name="amcl">
            <param name="initial_pose_x" value="0.0"/>
            <param name="initial_pose_y" value="5.0"/>
        </node>

        <node pkg="move_base" type="move_base" name="move_base" output="screen">
            <rosparam file="$(find cs_bot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
            <rosparam file="$(find cs_bot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
            <rosparam file="$(find cs_bot)/config/local_costmap_params.yaml" command="load" />
            <rosparam file="$(find cs_bot)/config/global_costmap_params.yaml" command="load" />
            <rosparam file="$(find cs_bot)/config/move_base_params.yaml" command="load" />
            
            <param name="global_costmap/global_frame" value="map"/>
            <param name="global_costmap/robot_base_frame" value="ct_robot1/base_footprint"/>
            <param name="local_costmap/global_frame" value="ct_robot1/odom"/>
            <param name="local_costmap/robot_base_frame" value="ct_robot1/base_footprint"/>
        </node>
    </group>

    <!-- Robot Controllers -->
    <node pkg="cs_bot" type="robot_controller.py" name="t_robot1_controller" output="screen">
        <param name="robot_name" value="t_robot1"/>
        <param name="team" value="T"/>
        <param name="weapon" value="RIFLE"/>
    </node>

    <node pkg="cs_bot" type="robot_controller.py" name="ct_robot1_controller" output="screen">
        <param name="robot_name" value="ct_robot1"/>
        <param name="team" value="CT"/>
        <param name="weapon" value="RIFLE"/>
    </node>

    <!-- Game manager node -->
    <node pkg="cs_bot" type="game_manager.py" name="game_manager" output="screen"/>

    <!-- RViz -->
    <node name="rviz" pkg="rviz" type="rviz" 
          args="-d $(find cs_bot)/rviz/test_config.rviz"/>
</launch> 